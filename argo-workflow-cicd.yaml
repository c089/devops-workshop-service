apiVersion: argoproj.io/v1alpha1
kind: Workflow
metadata:
  generateName: hello-cd-
spec:
  entrypoint: build-and-deploy
  templates:
    - name: build-and-deploy
      steps:
        - - name: build
            template: build
            arguments:
              parameters:
                - name: image
                  value: "registry:5000/hello-service:argo-{{workflow.uid}}"
        - - name: update-image-to-deploy
            template: update-image-to-deploy
            arguments:
              parameters:
                - name: image
                  value: "registry:5000/hello-service:argo-{{workflow.uid}}"
        - - name: deploy
            template: deploy
    - name: build
      inputs:
        parameters:
          - name: image
        artifacts:
        - name: sourcecode
          path: /src
          git:
            repo: http://developer:password@gitea-http.gitea.svc.cluster.local:3000/developer/service
            singleBranch: true
            branch: main
      container:
        image: moby/buildkit:v0.10.6-rootless
        workingDir: /src
        env:
          - name: BUILDKITD_FLAGS
            value: --oci-worker-no-process-sandbox
        command:
          - buildctl-daemonless.sh
        args:
          - build
          - --frontend
          - dockerfile.v0
          - --local
          - context=.
          - --local
          - dockerfile=.
          - --output
          - type=image,name={{inputs.parameters.image}},push=true,registry.insecure=true
    - name: update-image-to-deploy
      inputs:
        parameters:
        - name: image
        artifacts:
        - name: sourcecode
          path: /src
          git:
            repo: http://developer:password@gitea-http.gitea.svc.cluster.local:3000/developer/deployment
            singleBranch: true
            branch: main
      script:
        image: alpine:3.17.0
        command: [ "sh" ]
        source: |
            set -eux
            apk add yq
            apk add git
            cd /src
            ./deploy.sh {{inputs.parameters.image}}
    - name: deploy
      script:
        image: alpine/k8s:1.25.4
        command: [ "sh" ]
        env:
         - name: ARGOCD_TOKEN
           valueFrom:
             secretKeyRef:
               name: argocd-argo-workflows-token
               key: auth-token
        source: |
          set -xueo pipefail

          # TODO: use builder image or put binaries in repo
          mkdir /tmp/bin
          export PATH=$PATH:/tmp/bin
          curl -sSL -o /tmp/bin/kubectl-argo-rollouts https://github.com/argoproj/argo-rollouts/releases/download/v1.3.1/kubectl-argo-rollouts-linux-amd64
          curl -sSL -o /tmp/bin/argocd                https://github.com/argoproj/argo-cd/releases/download/v2.5.3/argocd-linux-amd64
          ls /tmp/bin
          chmod u+x /tmp/bin/*

          # sync to initiate rollout
          argocd --server argo-cd-argocd-server.argocd.svc.cluster.local --plaintext --auth-token="$ARGOCD_TOKEN" app sync hello
          # wait for rollout to start
          kubectl wait --for=condition=Paused rollout hello
          # wait for rollout to finish
          kubectl argo rollouts status hello
          # print rollout details to log
          kubectl argo rollouts get rollout hello
